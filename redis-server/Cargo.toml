[package]
name = "redis-server"
description = "A Redis server implementation in Rust"
license = "WTFPL"
version = "0.1.0"
edition = "2021"
repository = "https://www.github.com/slaiyer/coding-challenges"
keywords = ["redis", "database", "in-memory", "key-value", "store"]
categories = [
  "database",
  "concurrency",
  "asynchronous",
  "database",
  "network-programming",
]

[profile.release]
opt-level = 3
codegen-units = 1
lto = true
strip = true
panic = "abort"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
#anyhow = { version = "1.0.86", features = ["std", "backtrace"] }
dashmap = { version = "5.5.3", features = ["rayon", "inline"] }
once_cell = "1.19.0"
#slog = "2.7.0"
#thiserror = "1.0.61"
tokio = { version = "1.37.0", features = ["full"] }
tracing = { version = "0.1.40", features = [
  "attributes",
  "std",
  "tracing-attributes",
  "async-await",
  "log",
] }

[dev-dependencies]
pretty_assertions = "1.4.0"
